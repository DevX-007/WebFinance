"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./hooks/useTransactionsDB.tsx":
/*!*************************************!*\
  !*** ./hooks/useTransactionsDB.tsx ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionProvider: function() { return /* binding */ TransactionProvider; },\n/* harmony export */   useTransactions: function() { return /* binding */ useTransactions; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../types */ \"(app-pages-browser)/./types/index.ts\");\n/* harmony import */ var _utils_budgetUtils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/budgetUtils */ \"(app-pages-browser)/./utils/budgetUtils.ts\");\n/* harmony import */ var _barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! __barrel_optimize__?names=endOfMonth,format,isWithinInterval,parseISO,startOfMonth!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/startOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=endOfMonth,format,isWithinInterval,parseISO,startOfMonth!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/endOfMonth.js\");\n/* harmony import */ var _barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! __barrel_optimize__?names=endOfMonth,format,isWithinInterval,parseISO,startOfMonth!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/parseISO.js\");\n/* harmony import */ var _barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! __barrel_optimize__?names=endOfMonth,format,isWithinInterval,parseISO,startOfMonth!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/isWithinInterval.js\");\n/* harmony import */ var _barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! __barrel_optimize__?names=endOfMonth,format,isWithinInterval,parseISO,startOfMonth!=!date-fns */ \"(app-pages-browser)/./node_modules/date-fns/format.js\");\n\nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n\nconst TransactionContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nconst TransactionProvider = (param)=>{\n    let { children } = param;\n    _s();\n    const [transactions, setTransactions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [budgets, setBudgets] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    // API Functions\n    const fetchTransactions = async ()=>{\n        try {\n            setLoading(true);\n            setError(null);\n            const response = await fetch(\"/api/transactions\");\n            const result = await response.json();\n            if (result.success) {\n                setTransactions(result.data || []);\n            } else {\n                throw new Error(result.error || \"Failed to fetch transactions\");\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to fetch transactions\");\n            console.error(\"Error fetching transactions:\", err);\n        } finally{\n            setLoading(false);\n        }\n    };\n    const addTransaction = async (transaction)=>{\n        try {\n            setError(null);\n            const response = await fetch(\"/api/transactions\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(transaction)\n            });\n            const result = await response.json();\n            if (result.success) {\n                setTransactions((prev)=>[\n                        result.data,\n                        ...prev\n                    ]);\n            } else {\n                throw new Error(result.error || \"Failed to add transaction\");\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to add transaction\");\n            throw err;\n        }\n    };\n    const updateTransaction = async (transaction)=>{\n        try {\n            setError(null);\n            const response = await fetch(\"/api/transactions/\".concat(transaction.id), {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(transaction)\n            });\n            const result = await response.json();\n            if (result.success) {\n                setTransactions((prev)=>prev.map((t)=>t.id === transaction.id ? result.data : t));\n            } else {\n                throw new Error(result.error || \"Failed to update transaction\");\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to update transaction\");\n            throw err;\n        }\n    };\n    const deleteTransaction = async (id)=>{\n        try {\n            setError(null);\n            const response = await fetch(\"/api/transactions/\".concat(id), {\n                method: \"DELETE\"\n            });\n            const result = await response.json();\n            if (result.success) {\n                setTransactions((prev)=>prev.filter((t)=>t.id !== id));\n            } else {\n                throw new Error(result.error || \"Failed to delete transaction\");\n            }\n        } catch (err) {\n            setError(err instanceof Error ? err.message : \"Failed to delete transaction\");\n            throw err;\n        }\n    };\n    // Budget functions (still using localStorage)\n    const addBudget = (budget)=>{\n        const updatedBudgets = [\n            ...budgets,\n            budget\n        ];\n        setBudgets(updatedBudgets);\n        localStorage.setItem(\"fiscalizer-budgets\", JSON.stringify(updatedBudgets));\n    };\n    const updateBudget = (budget)=>{\n        const updatedBudgets = budgets.map((b)=>b.category === budget.category && b.month === budget.month ? budget : b);\n        setBudgets(updatedBudgets);\n        localStorage.setItem(\"fiscalizer-budgets\", JSON.stringify(updatedBudgets));\n    };\n    const deleteBudget = (category, month)=>{\n        const updatedBudgets = budgets.filter((b)=>!(b.category === category && b.month === month));\n        setBudgets(updatedBudgets);\n        localStorage.setItem(\"fiscalizer-budgets\", JSON.stringify(updatedBudgets));\n    };\n    const getBudgetForCategoryAndMonth = (category, month)=>{\n        return budgets.find((b)=>b.category === category && b.month === month);\n    };\n    // Initialize data\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        fetchTransactions();\n        // Load budgets from localStorage or use mock data\n        const savedBudgets = localStorage.getItem(\"fiscalizer-budgets\");\n        if (savedBudgets) {\n            setBudgets(JSON.parse(savedBudgets));\n        } else {\n            const mockBudgets = (0,_utils_budgetUtils__WEBPACK_IMPORTED_MODULE_3__.generateMockBudgets)();\n            setBudgets(mockBudgets);\n            localStorage.setItem(\"fiscalizer-budgets\", JSON.stringify(mockBudgets));\n        }\n    }, []);\n    // Computed values\n    const totalIncome = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        return transactions.filter((t)=>t.type === \"income\").reduce((sum, t)=>sum + t.amount, 0);\n    }, [\n        transactions\n    ]);\n    const totalExpenses = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        return transactions.filter((t)=>t.type === \"expense\").reduce((sum, t)=>sum + t.amount, 0);\n    }, [\n        transactions\n    ]);\n    const balance = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>totalIncome - totalExpenses, [\n        totalIncome,\n        totalExpenses\n    ]);\n    const recentTransactions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        return transactions.sort((a, b)=>new Date(b.date).getTime() - new Date(a.date).getTime()).slice(0, 5);\n    }, [\n        transactions\n    ]);\n    const currentMonthTransactions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const now = new Date();\n        const monthStart = (0,_barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_4__.startOfMonth)(now);\n        const monthEnd = (0,_barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_5__.endOfMonth)(now);\n        return transactions.filter((transaction)=>{\n            const transactionDate = (0,_barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_6__.parseISO)(transaction.date);\n            return (0,_barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_7__.isWithinInterval)(transactionDate, {\n                start: monthStart,\n                end: monthEnd\n            });\n        });\n    }, [\n        transactions\n    ]);\n    const categoryData = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const expenseTransactions = currentMonthTransactions.filter((t)=>t.type === \"expense\");\n        const totalExpenseAmount = expenseTransactions.reduce((sum, t)=>sum + t.amount, 0);\n        if (totalExpenseAmount === 0) return [];\n        const categoryTotals = expenseTransactions.reduce((acc, transaction)=>{\n            acc[transaction.category] = (acc[transaction.category] || 0) + transaction.amount;\n            return acc;\n        }, {});\n        return Object.entries(categoryTotals).map((param)=>{\n            let [category, amount] = param;\n            return {\n                category: category,\n                amount,\n                percentage: amount / totalExpenseAmount * 100,\n                color: _types__WEBPACK_IMPORTED_MODULE_2__.CATEGORY_COLORS[category]\n            };\n        }).sort((a, b)=>b.amount - a.amount);\n    }, [\n        currentMonthTransactions\n    ]);\n    const budgetComparison = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const currentMonth = (0,_barrel_optimize_names_endOfMonth_format_isWithinInterval_parseISO_startOfMonth_date_fns__WEBPACK_IMPORTED_MODULE_8__.format)(new Date(), \"yyyy-MM\");\n        const monthlyExpenses = currentMonthTransactions.filter((t)=>t.type === \"expense\").reduce((acc, transaction)=>{\n            acc[transaction.category] = (acc[transaction.category] || 0) + transaction.amount;\n            return acc;\n        }, {});\n        return budgets.filter((budget)=>budget.month === currentMonth).map((budget)=>{\n            const actualAmount = monthlyExpenses[budget.category] || 0;\n            const percentage = budget.amount > 0 ? actualAmount / budget.amount * 100 : 0;\n            return {\n                category: budget.category,\n                budgeted: budget.amount,\n                actual: actualAmount,\n                percentage,\n                color: _types__WEBPACK_IMPORTED_MODULE_2__.CATEGORY_COLORS[budget.category]\n            };\n        }).sort((a, b)=>b.percentage - a.percentage);\n    }, [\n        budgets,\n        currentMonthTransactions\n    ]);\n    const insights = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const insights = [];\n        // Budget insights\n        budgetComparison.forEach((item)=>{\n            if (item.percentage > 100) {\n                insights.push({\n                    type: \"warning\",\n                    message: \"You've exceeded your \".concat(item.category, \" budget by \").concat((item.percentage - 100).toFixed(1), \"%\"),\n                    value: \"$\".concat((item.actual - item.budgeted).toFixed(0), \" over budget\"),\n                    icon: \"⚠️\"\n                });\n            } else if (item.percentage > 80) {\n                insights.push({\n                    type: \"info\",\n                    message: \"You're at \".concat(item.percentage.toFixed(1), \"% of your \").concat(item.category, \" budget\"),\n                    value: \"$\".concat((item.budgeted - item.actual).toFixed(0), \" remaining\"),\n                    icon: \"\\uD83D\\uDCCA\"\n                });\n            }\n        });\n        // Spending pattern insights\n        if (categoryData.length > 0) {\n            const topCategory = categoryData[0];\n            insights.push({\n                type: \"info\",\n                message: \"\".concat(topCategory.category, \" is your highest expense category this month\"),\n                value: \"$\".concat(topCategory.amount.toFixed(0), \" (\").concat(topCategory.percentage.toFixed(1), \"%)\"),\n                icon: \"\\uD83D\\uDCC8\"\n            });\n        }\n        // Income vs Expenses\n        const monthlyIncome = currentMonthTransactions.filter((t)=>t.type === \"income\").reduce((sum, t)=>sum + t.amount, 0);\n        const monthlyExpenses = currentMonthTransactions.filter((t)=>t.type === \"expense\").reduce((sum, t)=>sum + t.amount, 0);\n        if (monthlyIncome > 0) {\n            const savingsRate = (monthlyIncome - monthlyExpenses) / monthlyIncome * 100;\n            if (savingsRate > 20) {\n                insights.push({\n                    type: \"success\",\n                    message: \"Great job! You're saving \".concat(savingsRate.toFixed(1), \"% of your income\"),\n                    value: \"₹\".concat((monthlyIncome - monthlyExpenses).toFixed(0), \" saved\"),\n                    icon: \"\\uD83C\\uDF89\"\n                });\n            } else if (savingsRate < 0) {\n                insights.push({\n                    type: \"warning\",\n                    message: \"You're spending more than you earn this month\",\n                    value: \"₹\".concat((monthlyExpenses - monthlyIncome).toFixed(0), \" overspent\"),\n                    icon: \"\\uD83D\\uDEA8\"\n                });\n            }\n        }\n        return insights.slice(0, 5); // Limit to 5 insights\n    }, [\n        budgetComparison,\n        categoryData,\n        currentMonthTransactions\n    ]);\n    const refreshTransactions = fetchTransactions;\n    const value = {\n        transactions,\n        budgets,\n        loading,\n        error,\n        addTransaction,\n        updateTransaction,\n        deleteTransaction,\n        addBudget,\n        updateBudget,\n        deleteBudget,\n        totalIncome,\n        totalExpenses,\n        balance,\n        categoryData,\n        budgetComparison,\n        insights,\n        recentTransactions,\n        currentMonthTransactions,\n        getBudgetForCategoryAndMonth,\n        refreshTransactions\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TransactionContext.Provider, {\n        value: value,\n        children: children\n    }, void 0, false, {\n        fileName: \"E:\\\\MERN Stack Projects\\\\Webfinance\\\\hooks\\\\useTransactionsDB.tsx\",\n        lineNumber: 339,\n        columnNumber: 5\n    }, undefined);\n};\n_s(TransactionProvider, \"jDtkxnSXGGQZg2qDEuuBHUOb7no=\");\n_c = TransactionProvider;\nconst useTransactions = ()=>{\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TransactionContext);\n    if (!context) {\n        throw new Error(\"useTransactions must be used within a TransactionProvider\");\n    }\n    return context;\n};\n_s1(useTransactions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./hooks/useTransactionsDB.tsx\n"));

/***/ })

});